{"version":3,"sources":["BarChart.js","App.js","reportWebVitals.js","index.js","alphabet.csv"],"names":["rd3","Component","BarChart","svgRef","React","useRef","properties","x","d","letter","y","frequency","yFormat","yLabel","height","color","nodeRef","d3","alphabets","then","data","_ref","arguments","length","undefined","_ref$x","i","_ref$y","title","_ref$marginTop","marginTop","_ref$marginRight","marginRight","_ref$marginBottom","marginBottom","_ref$marginLeft","marginLeft","_ref$width","width","_ref$height","xDomain","_ref$xRange","xRange","_ref$yType","yType","yDomain","_ref$yRange","yRange","_ref$xPadding","xPadding","_ref$color","X","Y","console","log","I","filter","has","xScale","padding","yScale","xAxis","tickSizeOuter","yAxis","ticks","formatValue","tickFormat","concat","O","T","svg","current","selectAll","remove","append","attr","call","g","select","clone","text","bar","join","bandwidth","node","createBarChart","react_default","a","createElement","ref","App","className","src_BarChart","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App","module","exports","p"],"mappings":"2OAMqBA,IAAIC,UAoGzB,IA0BeC,EA1BE,WACb,IAAMC,EAASC,IAAMC,OAAO,MACtBC,EAAa,CACfC,EAAG,SAAAC,GAAC,OAAIA,EAAEC,QACVC,EAAG,SAAAF,GAAC,OAAIA,EAAEG,WACVC,QAAS,IACTC,OAAQ,mBACRC,OAAQ,IACRC,MAAO,YACPC,QAASb,GAQb,OALAc,IAAOC,KAAWC,KAAK,SAACC,IA9G5B,SAAwBA,GAoBhB,IAAAC,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAAIG,EAAAJ,EAnBJd,SAmBI,IAAAkB,EAnBA,SAACjB,EAAGkB,GAAJ,OAAUA,GAmBVD,EAAAE,EAAAN,EAlBJX,SAkBI,IAAAiB,EAlBA,SAAAnB,GAAC,OAAIA,GAkBLmB,EAjBJC,EAiBIP,EAjBJO,MAiBIC,EAAAR,EAhBJS,iBAgBI,IAAAD,EAhBQ,GAgBRA,EAAAE,EAAAV,EAfJW,mBAeI,IAAAD,EAfU,EAeVA,EAAAE,EAAAZ,EAdJa,oBAcI,IAAAD,EAdW,GAcXA,EAAAE,EAAAd,EAbJe,kBAaI,IAAAD,EAbS,GAaTA,EAAAE,EAAAhB,EAZJiB,aAYI,IAAAD,EAZI,IAYJA,EAAAE,EAAAlB,EAXJP,cAWI,IAAAyB,EAXK,IAWLA,EAVJC,EAUInB,EAVJmB,QAUIC,EAAApB,EATJqB,cASI,IAAAD,EATK,CAACL,EAAYE,EAAQN,GAS1BS,EAAAE,EAAAtB,EARJuB,aAQI,IAAAD,EARI1B,IAQJ0B,EAPJE,EAOIxB,EAPJwB,QAOIC,EAAAzB,EANJ0B,cAMI,IAAAD,EANK,CAAChC,EAASoB,EAAcJ,GAM7BgB,EAAAE,EAAA3B,EALJ4B,gBAKI,IAAAD,EALO,GAKPA,EAJJpC,EAIIS,EAJJT,QACAC,EAGIQ,EAHJR,OAGIqC,EAAA7B,EAFJN,aAEI,IAAAmC,EAFI,eAEJA,EADJlC,EACIK,EADJL,QAGMmC,EAAIlC,IAAOG,EAAMb,GACjB6C,EAAInC,IAAOG,EAAMV,QAGPc,IAAZgB,IAAuBA,EAAUW,QACrB3B,IAAZqB,IAAuBA,EAAU,CAAC,EAAG5B,IAAOmC,KAChDC,QAAQC,IAAI,WACZD,QAAQC,IAAId,GACZA,EAAU,IAAIvB,IAAauB,GAE3Ba,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GACZC,QAAQC,IAAIP,GACZM,QAAQC,IAAIT,GAEZ,IAAMU,EAAItC,IAASkC,EAAE5B,QAAQiC,OAAO,SAAA9B,GAAC,OAAIc,EAAQiB,IAAIN,EAAEzB,MAGjDgC,EAASzC,IAAauB,EAASE,GAAQiB,QAAQV,GAC/CW,EAAShB,EAAMC,EAASE,GACxBc,EAAQ5C,IAAcyC,GAAQI,cAAc,GAC5CC,EAAQ9C,IAAY2C,GAAQI,MAAMlD,EAAS,GAAIF,GAGrD,QAAcY,IAAVI,EAAqB,CACrB,IAAMqC,EAAcL,EAAOM,WAAW,IAAKtD,GAC3CgB,EAAQ,SAAAF,GAAC,SAAAyC,OAAOhB,EAAEzB,GAAT,MAAAyC,OAAgBF,EAAYb,EAAE1B,UACpC,CACH,IAAM0C,EAAInD,IAAOG,EAAM,SAAAZ,GAAC,OAAIA,IACtB6D,EAAIzC,EACVA,EAAQ,SAAAF,GAAC,OAAI2C,EAAED,EAAE1C,GAAIA,EAAGN,IAG5B,IAAIkD,EAAMrD,IAAUD,EAAQuD,SAC5BD,EAAIE,UAAU,KAAKC,SAQnBH,EAAII,OAAO,KACNC,KAAK,YADV,aAAAR,OACoC/B,EADpC,QAEKwC,KAAKb,GACLa,KAAK,SAAAC,GAAC,OAAIA,EAAEC,OAAO,WAAWL,WAC9BG,KAAK,SAAAC,GAAC,OAAIA,EAAEL,UAAU,cAAcO,QAChCJ,KAAK,KAAMrC,EAAQF,EAAaJ,GAChC2C,KAAK,iBAAkB,MAC3BC,KAAK,SAAAC,GAAC,OAAIA,EAAEH,OAAO,QACfC,KAAK,KAAMvC,GACXuC,KAAK,IAAK,IACVA,KAAK,OAAQ,gBACbA,KAAK,cAAe,SACpBK,KAAKnE,KAEd,IAAMoE,EAAMX,EAAII,OAAO,KAClBC,KAAK,OAAQ5D,GACbyD,UAAU,QACVpD,KAAKmC,GACL2B,KAAK,QACLP,KAAK,IAAK,SAAAjD,GAAC,OAAIgC,EAAOP,EAAEzB,MACxBiD,KAAK,IAAK,SAAAjD,GAAC,OAAIkC,EAAOR,EAAE1B,MACxBiD,KAAK,SAAU,SAAAjD,GAAC,OAAIkC,EAAO,GAAKA,EAAOR,EAAE1B,MACzCiD,KAAK,QAASjB,EAAOyB,aAEtBvD,GAAOqD,EAAIP,OAAO,SACjBM,KAAKpD,GAEV0C,EAAII,OAAO,KACNC,KAAK,YADV,eAAAR,OACsCrD,EAASoB,EAD/C,MAEK0C,KAAKf,GAEHS,EAAIc,KAiBPC,CAAejE,EAAMd,KAIjBgF,EAAAC,EAAAC,cAAA,OAAKC,IAAKtF,EAAQmC,MAAM,MAAMxB,OAAO,SC/GlC4E,MARf,WACE,OACEJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACbL,EAAAC,EAAAC,cAACI,EAAD,QCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAA9E,KAAA6E,EAAAE,KAAA,WAAqB/E,KAAK,SAAAE,GAAiD,IAA9C8E,EAA8C9E,EAA9C8E,OAAQC,EAAsC/E,EAAtC+E,OAAQC,EAA8BhF,EAA9BgF,OAAQC,EAAsBjF,EAAtBiF,OAAQC,EAAclF,EAAdkF,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHtB,EAAAC,EAAAC,cAACF,EAAAC,EAAMsB,WAAP,KACEvB,EAAAC,EAAAC,cAACsB,EAAD,QAOJjB,wBChBAkB,EAAAC,QAAiBhB,EAAAiB,EAAuB","file":"static/js/main.2b390b2a.chunk.js","sourcesContent":["import React, { useRef, useEffect, createRef } from \"react\";\nimport * as d3 from \"d3\"\nimport rd3 from 'react-d3-library';\n\nimport alphabets from \"./alphabet.csv\"\n\nconst RD3Component = rd3.Component;\n\nfunction createBarChart(data, {\n    x = (d, i) => i, // given d in data, returns the (ordinal) x-value\n    y = d => d, // given d in data, returns the (quantitative) y-value\n    title, // given d in data, returns the title text\n    marginTop = 20, // the top margin, in pixels\n    marginRight = 0, // the right margin, in pixels\n    marginBottom = 30, // the bottom margin, in pixels\n    marginLeft = 40, // the left margin, in pixels\n    width = 640, // the outer width of the chart, in pixels\n    height = 400, // the outer height of the chart, in pixels\n    xDomain, // an array of (ordinal) x-values\n    xRange = [marginLeft, width - marginRight], // [left, right]\n    yType = d3.scaleLinear, // y-scale type\n    yDomain, // [ymin, ymax]\n    yRange = [height - marginBottom, marginTop], // [bottom, top]\n    xPadding = 0.1, // amount of x-range to reserve to separate bars\n    yFormat, // a format specifier string for the y-axis\n    yLabel, // a label for the y-axis\n    color = \"currentColor\", // bar fill color\n    nodeRef\n} = {}) {\n    // Compute values.\n    const X = d3.map(data, x);\n    const Y = d3.map(data, y);\n\n    // Compute default domains, and unique the x-domain.\n    if (xDomain === undefined) xDomain = X;\n    if (yDomain === undefined) yDomain = [0, d3.max(Y)];\n    console.log(\"xDomain\")\n    console.log(xDomain)\n    xDomain = new d3.InternSet(xDomain);\n\n    console.log(X);\n    console.log(Y);\n    console.log(yRange);\n    console.log(yDomain);\n    // Omit any data not present in the x-domain.\n    const I = d3.range(X.length).filter(i => xDomain.has(X[i]));\n\n    // Construct scales, axes, and formats.\n    const xScale = d3.scaleBand(xDomain, xRange).padding(xPadding);\n    const yScale = yType(yDomain, yRange);\n    const xAxis = d3.axisBottom(xScale).tickSizeOuter(0);\n    const yAxis = d3.axisLeft(yScale).ticks(height / 40, yFormat);\n\n    // Compute titles.\n    if (title === undefined) {\n        const formatValue = yScale.tickFormat(100, yFormat);\n        title = i => `${X[i]}\\n${formatValue(Y[i])}`;\n    } else {\n        const O = d3.map(data, d => d);\n        const T = title;\n        title = i => T(O[i], i, data);\n    }\n\n    var svg = d3.select(nodeRef.current);\n    svg.selectAll(\"*\").remove(); // Clear svg content before adding new elements  \n\n    // svg.append(\"svg\")\n    //     .attr(\"width\", width)\n    //     .attr(\"height\", height)\n    //     .attr(\"viewBox\", [0, 0, width, height])\n    //     .attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\");\n\n    svg.append(\"g\")\n        .attr(\"transform\", `translate(${marginLeft},0)`)\n        .call(yAxis)\n        .call(g => g.select(\".domain\").remove())\n        .call(g => g.selectAll(\".tick line\").clone()\n            .attr(\"x2\", width - marginLeft - marginRight)\n            .attr(\"stroke-opacity\", 0.1))\n        .call(g => g.append(\"text\")\n            .attr(\"x\", -marginLeft)\n            .attr(\"y\", 10)\n            .attr(\"fill\", \"currentColor\")\n            .attr(\"text-anchor\", \"start\")\n            .text(yLabel));\n\n    const bar = svg.append(\"g\")\n        .attr(\"fill\", color)\n        .selectAll(\"rect\")\n        .data(I)\n        .join(\"rect\")\n        .attr(\"x\", i => xScale(X[i]))\n        .attr(\"y\", i => yScale(Y[i]))\n        .attr(\"height\", i => yScale(0) - yScale(Y[i]))\n        .attr(\"width\", xScale.bandwidth());\n\n    if (title) bar.append(\"title\")\n        .text(title);\n\n    svg.append(\"g\")\n        .attr(\"transform\", `translate(0,${height - marginBottom})`)\n        .call(xAxis);\n\n    return svg.node;\n}\n\nconst BarChart = () => {\n    const svgRef = React.useRef(null);\n    const properties = {\n        x: d => d.letter,\n        y: d => d.frequency,\n        yFormat: \"%\",\n        yLabel: \"â†‘ Frequency\",\n        height: 500,\n        color: \"steelblue\",\n        nodeRef: svgRef\n    }\n\n    d3.csv(alphabets).then((data) => {\n        // console.log(data)\n        createBarChart(data, properties);\n    })\n\n    return (\n            <svg ref={svgRef} width=\"800\" height=\"600\"/>\n    );\n\n    // return <div>\n    //     {this.state.node}\n    // </div>\n}\n\nexport default BarChart;\n","import './App.css';\nimport React from 'react';\nimport BarChart from './BarChart';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BarChart/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/alphabet.2476c334.csv\";"],"sourceRoot":""}