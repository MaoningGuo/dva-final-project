{"version":3,"sources":["final_data.csv","alphabet.csv","bar-chart.js","multiline-chart1.js","bar-charts.js","global-map.js","landing.js","index.js"],"names":["module","exports","__webpack_require__","p","createMultilineChart","data","_ref","arguments","length","undefined","_ref$x","x","d","i","_ref$y","y","parseFloat","title","_ref$marginTop","marginTop","_ref$marginRight","marginRight","_ref$marginBottom","marginBottom","_ref$marginLeft","marginLeft","_ref$width","width","_ref$height","height","xDomain","_ref$xRange","xRange","_ref$yType","yType","d3","yDomain","_ref$yRange","yRange","_ref$xPadding","xPadding","yFormat","yLabel","nodeRef","X","Y","map","xScale","padding","yScale","xAxis","tickSizeOuter","tickFormat","interval","yAxis","ticks","formatValue","concat","O","T","svg","current","selectAll","remove","tooltip","append","attr","call","g","select","clone","text","style","enter","dt","Temperature","on","this","html","target","__data__","datum","curve","p1","p2","p3_nn","p3_svr","node","MultilineChart","svgRef","React","useRef","properties","color","final_data","then","o","City","Country","Math","round","toFixed","Pred_M1_SARIMAX","Pred_M2_HistoricalSimulation","Pred_M3_NN","Pred_M3_SVR","allGroup","Object","toConsumableArray","Set","item","sort","console","log","filter","selectedGroup","selectedOption","property","split","react_default","a","createElement","ref","BarCharts","className","id","multiline_chart1","Versor","_ref2","slicedToArray","l","PI","sl","sin","cl","cos","sp","cp","sg","cg","_ref4","_ref3","b","c","atan2","asin","max","min","interpolate","fromAngles","t","toAngles","_ref7","_ref5","a1","b1","c1","d1","_ref8","_ref6","a2","b2","c2","d2","Array","hypot","_ref11","_ref9","_ref12","_ref10","dot","interpolateLinear","theta0","acos","theta","s","GlobeMap","props","_useState","useState","_useState2","world","setWorld","name","getWorld","_ref13","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","apply","canvasRef","sphere","type","draw","_ref14","_callee2","context","land","borders","countries","projection","path","render","r1","r2","_iterator","_step","_loop","_context3","topojson","objects","features","fitExtent","country","arc","clearRect","beginPath","fillStyle","fill","strokeStyle","lineWidth","stroke","_createForOfIteratorHelper","ip","iv","_context2","value","interpolateAngles","duration","tween","rotate","coordinates","transition","end","n","done","delegateYield","t1","e","f","finish","_x","useEffect","getContext","assign","LandingComponent","react_router_dom","to","ReactDOM","createRoot","document","getElementById","StrictMode","basename","react_router","element","src_landing","exact","src_bar_charts","global_map"],"mappings":"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","file":"static/js/main.cc5bbbf8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/final_data.3b90f8c8.csv\";","module.exports = __webpack_public_path__ + \"static/media/alphabet.2476c334.csv\";","import React from \"react\";\nimport * as d3 from \"d3\"\n\nimport alphabets from \"./alphabet.csv\"\nimport final_data from \"./final_data.csv\"\n\nfunction createBarChart(data, {\n    x = (d, i) => i, // given d in data, returns the (ordinal) x-value\n    y = d => d, // given d in data, returns the (quantitative) y-value\n    title, // given d in data, returns the title text\n    marginTop = 20, // the top margin, in pixels\n    marginRight = 0, // the right margin, in pixels\n    marginBottom = 30, // the bottom margin, in pixels\n    marginLeft = 40, // the left margin, in pixels\n    width = 1200, // the outer width of the chart, in pixels\n    height = 900, // the outer height of the chart, in pixels\n    xDomain, // an array of (ordinal) x-values\n    xRange = [marginLeft, width - marginRight], // [left, right]\n    yType = d3.scaleLinear, // y-scale type\n    yDomain, // [ymin, ymax]\n    yRange = [height - marginBottom, marginTop], // [bottom, top]\n    xPadding = 0.1, // amount of x-range to reserve to separate bars\n    yFormat, // a format specifier string for the y-axis\n    yLabel, // a label for the y-axis\n    color = \"currentColor\", // bar fill color\n    nodeRef\n} = {}) {\n    // Compute values.\n    const X = d3.map(data, x);\n    const Y = d3.map(data, y);\n\n    // Compute default domains, and unique the x-domain.\n    if (xDomain === undefined) xDomain = X;\n    if (yDomain === undefined) yDomain = [0, d3.max(Y)];\n    console.log(\"xDomain\")\n    console.log(xDomain)\n    xDomain = new d3.InternSet(xDomain);\n    console.log(\"xDomain\")\n    console.log(xDomain)\n    //console.log(X);\n    //console.log(Y);\n    //console.log(yRange);\n    console.log(\"yDomain is\");\n    console.log(yDomain);\n    // Omit any data not present in the x-domain.\n    const I = d3.range(X.length).filter(i => xDomain.has(X[i]));\n\n    // Construct scales, axes, and formats.\n    const xScale = d3.scaleBand(xDomain, xRange).padding(xPadding);\n    const yScale = yType(yDomain, yRange);\n    const xAxis = d3.axisBottom(xScale).tickSizeOuter(0);\n    const yAxis = d3.axisLeft(yScale).ticks(height / 40, yFormat);\n\n    // Compute titles.\n    if (title === undefined) {\n        const formatValue = yScale.tickFormat(100, yFormat);\n        title = i => `${X[i]}\\n${formatValue(Y[i])}`;\n    } else {\n        const O = d3.map(data, d => d);\n        const T = title;\n        title = i => T(O[i], i, data);\n    }\n\n    var svg = d3.select(nodeRef.current);\n    svg.selectAll(\"*\").remove(); // Clear svg content before adding new elements  \n\n    // svg.append(\"svg\")\n    //     .attr(\"width\", width)\n    //     .attr(\"height\", height)\n    //     .attr(\"viewBox\", [0, 0, width, height])\n    //     .attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\");\n\n    svg.append(\"g\")\n        .attr(\"transform\", `translate(${marginLeft},0)`)\n        .call(yAxis)\n        .call(g => g.select(\".domain\").remove())\n        .call(g => g.selectAll(\".tick line\").clone()\n            .attr(\"x2\", width - marginLeft - marginRight)\n            .attr(\"stroke-opacity\", 0.1))\n        .call(g => g.append(\"text\")\n            .attr(\"x\", -marginLeft)\n            .attr(\"y\", 10)\n            .attr(\"fill\", \"currentColor\")\n            .attr(\"text-anchor\", \"start\")\n            .text(yLabel));\n\n/*      const bar = svg.append(\"g\")\n        .attr(\"fill\", color)\n        .selectAll(\"rect\")\n        .data(I)\n        .join(\"rect\")\n        .attr(\"x\", i => xScale(X[i]))\n        .attr(\"y\", i => yScale(Y[i])+(yScale(0) - yScale(Y[i]))/2)\n        .attr(\"height\", i => (yScale(0) - yScale(Y[i]))/2)\n        .attr(\"width\", xScale.bandwidth()) */\n\n\n\n\n\n    svg.append(\"g\")\n        .attr(\"transform\", `translate(0,${height - marginBottom})`)\n        .call(xAxis);\n\n    return svg.node;\n}\n\nconst BarChart = () => {\n    const svgRef = React.useRef(null);\n    const properties = {\n        x: d => d.dt,\n        y: d => d.Temperature,\n        yFormat: \",\",\n        yLabel: \"↑ Temperature\",\n        height: 500,\n        color: \"steelblue\",\n        nodeRef: svgRef\n    }\n    \n    d3.csv(final_data).then((data) => {\n        // console.log(data)\n        data=data.filter(d=>(d.City=='Dresden' & d.Country=='Germany'))\n        data=data.map(o => { return {dt: o.dt, Temperature: o.Temperature} })\n        \n        //data=data.map(o => { return {dt: o.letter, Temperature: o.frequency} })\n        //console.log(data)\n        createBarChart(data.splice(0,24), properties);\n    })\n\n    return (\n            <svg ref={svgRef} width=\"1200\" height=\"900\"/>\n    );\n\n    // return <div>\n    //     {this.state.node}\n    // </div>\n}\n\nexport default BarChart;\n","import React from \"react\";\nimport * as d3 from \"d3\"\nimport final_data from \"./final_data.csv\"\n\nfunction createMultilineChart(data, {\n    x = (d, i) => i, // given d in data, returns the (ordinal) x-value\n    y = d => parseFloat(d), // given d in data, returns the (quantitative) y-value\n    title, // given d in data, returns the title text\n    marginTop = 20, // the top margin, in pixels\n    marginRight = 0, // the right margin, in pixels\n    marginBottom = 30, // the bottom margin, in pixels\n    marginLeft = 40, // the left margin, in pixels\n    width = 900, // the outer width of the chart, in pixels\n    height = 900, // the outer height of the chart, in pixels\n    xDomain, // an array of (ordinal) x-values\n    xRange = [marginLeft, width - marginRight], // [left, right]\n    yType = d3.scaleLinear, // y-scale type\n    yDomain, // [ymin, ymax]\n    yRange = [height - marginBottom, marginTop], // [bottom, top]\n    xPadding = 0.1, // amount of x-range to reserve to separate bars\n    yFormat, // a format specifier string for the y-axis\n    yLabel, // a label for the y-axis\n    nodeRef\n} = {}) {\n    // Compute values.\n    const X = d3.map(data, x);\n    const Y_1 = d3.map(data, y);\n    var Y=Y_1.map(d=>parseFloat(d))\n    // Compute default domains, and unique the x-domain.\n    if (xDomain === undefined) xDomain = X;\n    if (yDomain === undefined) yDomain = [d3.min(Y)-1, d3.max(Y)+1];\n    xDomain = new d3.InternSet(xDomain);\n    // Construct scales, axes, and formats.\n    const xScale = d3.scaleBand(xDomain, xRange).padding(xPadding);\n    const yScale = yType(yDomain, yRange);\n    const xAxis = d3.axisBottom(xScale).tickSizeOuter(0)\n    .tickFormat((interval,i) => {return i%6 !== 0 ? \" \": interval;})\n    const yAxis = d3.axisLeft(yScale).ticks(6)\n\n    // Compute titles.\n    if (title === undefined) {\n        const formatValue = yScale.tickFormat(100, yFormat);\n        title = i => `${X[i]}\\n${formatValue(Y[i])}`;\n    } else {\n        const O = d3.map(data, d => d);\n        const T = title;\n        title = i => T(O[i], i, data);\n    }\n    var svg = d3.select(nodeRef.current);\n    svg.selectAll(\"*\").remove(); // Clear svg content before adding new elements  \n    var tooltip=d3.select(\"#tooltip\")\n    svg.append(\"g\")\n        .attr(\"transform\", `translate(${marginLeft},0)`)\n        .call(yAxis)\n        .call(g => g.select(\".domain\").remove())\n        .call(g => g.selectAll(\".tick line\").clone()\n            .attr(\"x2\", width - marginLeft - marginRight)\n            .attr(\"stroke-opacity\", 0.1))\n        .call(g => g.append(\"text\")\n            .attr(\"x\", -marginLeft)\n            .attr(\"y\", 15)\n            .attr(\"fill\", \"currentColor\")\n            .attr(\"text-anchor\", \"start\")\n            .text(yLabel))\n            .style(\"font-size\",\"15\")\n\n    svg.append(\"g\")\n        .attr(\"transform\", `translate(0,${height - marginBottom})`)\n        .call(xAxis);\n//temp\n    svg.append('g')\n        .selectAll(\"dot\")\n        .data(data)\n        .enter()\n        .append(\"circle\")\n        .attr(\"cx\", function (d) { return xScale(d.dt); } )\n        .attr(\"cy\", function (d) { return yScale(d.Temperature); } )\n        .attr(\"r\", 4)\n        .style(\"fill\", \"#ae2012\")        \n        .on(\"mouseover\", function(d) {\t\t\n            d3.select(this).attr(\"r\", 12);    \n            tooltip.style(\"visibility\",\"visible\")\n            tooltip.html(\"<li>Date: \"+d.target.__data__.dt+ \"</li><li>\"  + \"Temperature: </li><li>\"+d.target.__data__.Temperature+\" \\u00B0C</li>\")\t\n            })\t\t\t\t\t\n        .on(\"mouseout\", function(d) {\t\n            d3.select(this).attr(\"r\", 4); \t\n            tooltip.style(\"visibility\",\"hidden\")\t\n        });\n\n    svg.append(\"path\")\n        .datum(data)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"#ae2012\")\n        .attr(\"stroke-width\", 1.5)\n        .attr(\"d\", d3.line()\n          .x(function(d) { \n              return xScale(d.dt) })\n          .y(function(d) { \n              return yScale(d.Temperature) })\n        .curve(d3.curveNatural)\n          )\n\n//pred1\nsvg.append('g')\n.selectAll(\"dot\")\n.data(data)\n.enter()\n.append(\"circle\")\n.attr(\"cx\", function (d) { return xScale(d.dt); } )\n.attr(\"cy\", function (d) { return yScale(d.p1); } )\n.attr(\"r\", 4)\n.style(\"fill\", \"#219ebc\")\n.on(\"mouseover\", function(d) {\t\n    d3.select(this).attr(\"r\", 12);  \t  \n    tooltip.style(\"visibility\",\"visible\")\n    tooltip.html(\"<li>Date: \"+d.target.__data__.dt+ \"</li><li>\"  + \"SARIMAX Prediction: </li><li>\"+d.target.__data__.p1+\" \\u00B0C</li>\")\t\n    })\t\t\t\t\t\n.on(\"mouseout\", function(d) {\t\n    d3.select(this).attr(\"r\", 4);  \t\n    tooltip.style(\"visibility\",\"hidden\")\t\n});\n\nsvg.append(\"path\")\n.datum(data)\n.attr(\"fill\", \"none\")\n.attr(\"stroke\", \"#219ebc\")\n.attr(\"stroke-width\", 1.5)\n.attr(\"d\", d3.line()\n  .x(function(d) { \n      return xScale(d.dt) })\n  .y(function(d) { \n      return yScale(d.p1) })\n  .curve(d3.curveNatural)\n  )\n\n  //p2\n  svg.append('g')\n  .selectAll(\"dot\")\n  .data(data)\n  .enter()\n  .append(\"circle\")\n  .attr(\"cx\", function (d) { return xScale(d.dt); } )\n  .attr(\"cy\", function (d) { return yScale(d.p2); } )\n  .attr(\"r\", 4)\n  .style(\"fill\", \"#023047\")\n  .on(\"mouseover\", function(d) {\t\t\n    d3.select(this).attr(\"r\", 12);    \n    tooltip.style(\"visibility\",\"visible\")\n    tooltip.html(\"<li>Date: \"+d.target.__data__.dt+ \"</li><li>\"  + \"Historical Simulation Prediction: </li><li>\"+d.target.__data__.p2+\" \\u00B0C</li>\")\t\n    })\t\t\t\t\t\n.on(\"mouseout\", function(d) {\n    d3.select(this).attr(\"r\", 4);  \t\t\n    tooltip.style(\"visibility\",\"hidden\")\t\n});\n\nsvg.append(\"path\")\n  .datum(data)\n  .attr(\"fill\", \"none\")\n  .attr(\"stroke\", \"#023047\")\n  .attr(\"stroke-width\", 1.5)\n  .attr(\"d\", d3.line()\n    .x(function(d) { \n        return xScale(d.dt) })\n    .y(function(d) { \n        return yScale(d.p2) })\n    .curve(d3.curveNatural)\n    )\n\n    //p3_nn\n    svg.append('g')\n        .selectAll(\"dot\")\n        .data(data)\n        .enter()\n        .append(\"circle\")\n        .attr(\"cx\", function (d) { return xScale(d.dt); } )\n        .attr(\"cy\", function (d) { return yScale(d.p3_nn); } )\n        .attr(\"r\", 4)\n        .style(\"fill\", \"#ffb703\")\n        .on(\"mouseover\", function(d) {\t\n            d3.select(this).attr(\"r\", 12);  \t  \n            tooltip.style(\"visibility\",\"visible\")\n            tooltip.html(\"<li>Date: \"+d.target.__data__.dt+ \"</li><li>\"  + \"Neural Networks Prediction: </li><li>\"+d.target.__data__.p3_nn+\" \\u00B0C</li>\")\t\n            })\t\t\t\t\t\n        .on(\"mouseout\", function(d) {\t\n            d3.select(this).attr(\"r\", 4);  \t\n            tooltip.style(\"visibility\",\"hidden\")\t\n        });\n\n    svg.append(\"path\")\n        .datum(data)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"#ffb703\")\n        .attr(\"stroke-width\", 1.5)\n        .attr(\"d\", d3.line()\n          .x(function(d) { \n              return xScale(d.dt) })\n          .y(function(d) { \n              return yScale(d.p3_nn) })\n        .curve(d3.curveNatural)\n          )\n    //p3_svr\n    svg.append('g')\n        .selectAll(\"dot\")\n        .data(data)\n        .enter()\n        .append(\"circle\")\n        .attr(\"cx\", function (d) { return xScale(d.dt); } )\n        .attr(\"cy\", function (d) { return yScale(d.p3_svr); } )\n        .attr(\"r\", 4)\n        .style(\"fill\", \"#76c893\")\n        .on(\"mouseover\", function(d) {\t\n            d3.select(this).attr(\"r\", 12);  \t  \n            tooltip.style(\"visibility\",\"visible\")\n            tooltip.html(\"<li>Date: \"+d.target.__data__.dt+ \"</li><li>\"  + \"SVR Prediction: </li><li>\"+d.target.__data__.p3_svr+\" \\u00B0C</li>\")\t\n            })\t\t\t\t\t\n        .on(\"mouseout\", function(d) {\t\n            d3.select(this).attr(\"r\", 4);  \t\n            tooltip.style(\"visibility\",\"hidden\")\t\n        });\n\n    svg.append(\"path\")\n        .datum(data)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"#76c893\")\n        .attr(\"stroke-width\", 1.5)\n        .attr(\"d\", d3.line()\n          .x(function(d) { \n              return xScale(d.dt) })\n          .y(function(d) { \n              return yScale(d.p3_svr) })\n        .curve(d3.curveNatural)\n          )\n          svg.append(\"circle\").attr(\"cx\",900).attr(\"cy\",130).attr(\"r\", 6).style(\"fill\", \"#ae2012\")\n          svg.append(\"circle\").attr(\"cx\",900).attr(\"cy\",160).attr(\"r\", 6).style(\"fill\", \"#219ebc\")\n          svg.append(\"circle\").attr(\"cx\",900).attr(\"cy\",190).attr(\"r\", 6).style(\"fill\", \"#023047\")\n          svg.append(\"circle\").attr(\"cx\",900).attr(\"cy\",220).attr(\"r\", 6).style(\"fill\", \"#ffb703\")\n          svg.append(\"circle\").attr(\"cx\",900).attr(\"cy\",250).attr(\"r\", 6).style(\"fill\", \"#76c893\")\n\n          svg.append(\"text\").attr(\"x\", 920).attr(\"y\", 130).text(\"Temperature\")\n          .style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\n\n          svg.append(\"text\").attr(\"x\", 920).attr(\"y\", 160).text(\"SARIMAX Prediction\")\n          .style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\n\n          svg.append(\"text\").attr(\"x\", 920).attr(\"y\", 190).text(\"Historic Simulation Prediction\")\n          .style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\n\n          svg.append(\"text\").attr(\"x\", 920).attr(\"y\", 220).text(\"NN Prediction\")\n          .style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\n\n          svg.append(\"text\").attr(\"x\", 920).attr(\"y\", 250).text(\"SVR Prediction\")\n          .style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\n    return svg.node;\n}\n\nconst MultilineChart = () => {\n    const svgRef = React.useRef(null);\n    const properties = {\n        x: d => d.dt,\n        y: d => d.Temperature,\n        yFormat: \",\",\n        yLabel: \"↑ Temperature (\\u00B0C)\",\n        height: 500,\n        color: \"steelblue\",\n        nodeRef: svgRef\n    }\n    \n    d3.csv(final_data).then((data) => {\n        data=data.map(o => { return {dt: o.dt, \n            City:o.City,\n            Country:o.Country,\n            Temperature: (Math.round(o.Temperature * 100) / 100).toFixed(2),\n            p1:(Math.round(o.Pred_M1_SARIMAX  * 100) / 100).toFixed(2),\n            p2:(Math.round(o.Pred_M2_HistoricalSimulation  * 100) / 100).toFixed(2),\n            p3_nn:(Math.round(o.Pred_M3_NN * 100) / 100).toFixed(2),\n            p3_svr:(Math.round(o.Pred_M3_SVR * 100) / 100).toFixed(2)} })\n        // console.log(data)\n        var allGroup =  [...new Set(data.map(item => item.City+\",\"+item.Country))];\n        allGroup=allGroup.sort()\n        console.log(allGroup)\n        // add the options to the button\n        d3.select(\"#selectButton\")\n        .selectAll('myOptions')\n     \t.data(allGroup)\n        .enter()\n    \t.append('option')\n      .text(function (d) { return d; }) // text showed in the menu\n      .attr(\"value\", function (d) { return d; }) \n\n      var dataFilter=data.filter(d=>(d.City=='Dresden' & d.Country=='Germany'))\n    \n    createMultilineChart(dataFilter, properties);\n\n      function update(selectedGroup) {\n        // Create new data with the selection?\n        var dataFilter = data.filter(d=>(d.City==selectedGroup.split(',')[0] & d.Country==selectedGroup.split(',')[1]))\n\n        // Give these new data to update line\n        createMultilineChart(dataFilter, properties);\n      }\n      // When the button is changed, run the updateChart function\n      d3.select(\"#selectButton\").on(\"change\", function(d) {\n          // recover the option that has been chosen\n          var selectedOption = d3.select(this).property(\"value\")\n          // run the updateChart function with this selected option\n          update(selectedOption)\n      })\n    })\n    return (\n            <svg ref={svgRef} width=\"1100\" height=\"900\"/>\n    );\n}\n\nexport default MultilineChart;\n","import React from 'react';\nimport BarChart from './bar-chart';\nimport MultilineChart from './multiline-chart1'\nimport './bar-charts.css';\n\nfunction BarCharts() {\n  return (\n    <div className=\"App\">\n      <h2 id=\"title\">Temperature Time Series of Cities around the World</h2>\n      <div id=\"select-box\">\n        <lable>Select Location </lable><br></br>\n        <select id=\"selectButton\"></select>\n        </div>\n      <div id=\"tooltip\">\n      </div>\n      <div id=\"svg-div\">\n        <MultilineChart></MultilineChart>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default BarCharts;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport * as topojson from \"topojson-client\";\nimport * as d3 from \"d3\"\n\n//https://observablehq.com/@d3/world-tour\nclass Versor {\n    static fromAngles([l, p, g]) {\n        l *= Math.PI / 360;\n        p *= Math.PI / 360;\n        g *= Math.PI / 360;\n        const sl = Math.sin(l), cl = Math.cos(l);\n        const sp = Math.sin(p), cp = Math.cos(p);\n        const sg = Math.sin(g), cg = Math.cos(g);\n        return [\n            cl * cp * cg + sl * sp * sg,\n            sl * cp * cg - cl * sp * sg,\n            cl * sp * cg + sl * cp * sg,\n            cl * cp * sg - sl * sp * cg\n        ];\n    }\n    static toAngles([a, b, c, d]) {\n        return [\n            Math.atan2(2 * (a * b + c * d), 1 - 2 * (b * b + c * c)) * 180 / Math.PI,\n            Math.asin(Math.max(-1, Math.min(1, 2 * (a * c - d * b)))) * 180 / Math.PI,\n            Math.atan2(2 * (a * d + b * c), 1 - 2 * (c * c + d * d)) * 180 / Math.PI\n        ];\n    }\n    static interpolateAngles(a, b) {\n        const i = Versor.interpolate(Versor.fromAngles(a), Versor.fromAngles(b));\n        return t => Versor.toAngles(i(t));\n    }\n    static interpolateLinear([a1, b1, c1, d1], [a2, b2, c2, d2]) {\n        a2 -= a1;\n        b2 -= b1;\n        c2 -= c1;\n        d2 -= d1;\n        const x = new Array(4);\n        return t => {\n            const l = Math.hypot(x[0] = a1 + a2 * t, x[1] = b1 + b2 * t, x[2] = c1 + c2 * t, x[3] = d1 + d2 * t);\n            x[0] /= l;\n            x[1] /= l;\n            x[2] /= l;\n            x[3] /= l;\n            return x;\n        };\n    }\n    static interpolate([a1, b1, c1, d1], [a2, b2, c2, d2]) {\n        let dot = a1 * a2 + b1 * b2 + c1 * c2 + d1 * d2;\n        if (dot < 0) {\n            a2 = -a2;\n            b2 = -b2;\n            c2 = -c2;\n            d2 = -d2;\n            dot = -dot;\n        }\n\n        if (dot > 0.9995) return Versor.interpolateLinear([a1, b1, c1, d1], [a2, b2, c2, d2]);\n        const theta0 = Math.acos(Math.max(-1, Math.min(1, dot)));\n        const x = new Array(4);\n        const l = Math.hypot(a2 -= a1 * dot, b2 -= b1 * dot, c2 -= c1 * dot, d2 -= d1 * dot);\n        a2 /= l;\n        b2 /= l;\n        c2 /= l;\n        d2 /= l;\n        return t => {\n            const theta = theta0 * t;\n            const s = Math.sin(theta);\n            const c = Math.cos(theta);\n            x[0] = a1 * c + a2 * s;\n            x[1] = b1 * c + b2 * s;\n            x[2] = c1 * c + c2 * s;\n            x[3] = d1 * c + d2 * s;\n            return x;\n        };\n    }\n}\n\nconst GlobeMap = props => {\n    const [world, setWorld] = useState('');\n    let name = '';\n    const getWorld = async () => {\n        await d3.json(\"https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json\")\n            .then(world => {\n                setWorld(world);\n            })\n    }\n    const canvasRef = useRef(null)\n    const width = 900;\n\n    const sphere = ({ type: \"Sphere\" })\n    const tilt = 20\n    const height = Math.min(width, 720)\n\n    const draw = async (context) => {\n        const land = topojson.feature(world, world.objects.land)\n        const borders = topojson.mesh(world, world.objects.countries, (a, b) => a !== b)\n        const countries = topojson.feature(world, world.objects.countries).features\n\n        const projection = d3.geoOrthographic().fitExtent([[10, 10], [width - 10, height - 10]], sphere);\n        const path = d3.geoPath(projection, context);\n\n        const render = (country, arc) => {\n            context.clearRect(0, 0, width, height);\n\n            context.beginPath();\n            path(land);\n            context.fillStyle = \"#ccc\";\n            context.fill();\n            context.beginPath();\n            context.beginPath();\n\n            path(country);\n            context.fillStyle = \"#f00\";\n            context.fill();\n            context.beginPath();\n\n            path(borders);\n            context.strokeStyle = \"#fff\";\n            context.lineWidth = 0.5;\n            context.stroke();\n\n            path(sphere);\n            context.strokeStyle = \"#000\";\n            context.lineWidth = 1.5;\n            context.stroke();\n\n            context.beginPath();\n            path(arc);\n            context.stroke();\n        }\n\n        let p1, p2 = [0, 0], r1, r2 = [0, 0, 0];\n        for (const country of countries) {\n            name = country.properties.name;\n            render(country);\n\n            p1 = p2;\n            p2 = d3.geoCentroid(country);\n            r1 = r2;\n            r2 = [-p2[0], tilt - p2[1], 0];\n            const ip = d3.geoInterpolate(p1, p2);\n            const iv = Versor.interpolateAngles(r1, r2);\n\n            await d3.transition()\n                .duration(1250)\n                .tween(\"render\", () => t => {\n                    projection.rotate(iv(t));\n                    render(country, { type: \"LineString\", coordinates: [p1, ip(t)] });\n                })\n                .transition()\n                .tween(\"render\", () => t => {\n                    render(country, { type: \"LineString\", coordinates: [ip(t), p2] });\n                })\n                .end();\n        }\n    }\n\n    useEffect(() => {\n        if (!world) {\n            getWorld();\n            return;\n        }\n\n        const canvas = canvasRef.current\n        const context = canvas.getContext('2d')\n\n        //Our draw come here\n        draw(context)\n    }, [draw])\n\n    return <div>\n        <div>{name}</div>\n        <canvas ref={canvasRef} {...props} width={width} height={height} />\n    </div>\n}\n\nexport default GlobeMap;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./landing.css\"\n\nconst LandingComponent = () => {\n\n    return <nav className='landing'>\n        <Link className=\"btn btn-primary\" to=\"/bars\">Dashbord</Link>\n        <Link className=\"btn btn-primary\" to=\"/globe\">See Global Stat</Link>\n    </nav>\n}\n\nexport default LandingComponent;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport './index.css';\nimport BarCharts from './bar-charts';\nimport GlobeMap from './global-map';\nimport LandingComponent from \"./landing\"\nimport 'bootstrap-css-only/css/bootstrap.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    <Router basename='dva-final-project'>\n      <Routes className=\"root-router\">\n        <Route path='/' element={<LandingComponent />} />\n        <Route exact path='/bars' element={<BarCharts />} />\n        <Route exact path='/globe' element={<GlobeMap />} />\n      </Routes>\n    </Router>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}