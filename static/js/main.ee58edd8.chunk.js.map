{"version":3,"sources":["bar-chart.js","bar-charts.js","global-map.js","landing.js","index.js","alphabet.csv"],"names":["BarChart","svgRef","React","useRef","properties","x","d","letter","y","frequency","yFormat","yLabel","height","color","nodeRef","d3","alphabets","then","data","_ref","arguments","length","undefined","_ref$x","i","_ref$y","title","_ref$marginTop","marginTop","_ref$marginRight","marginRight","_ref$marginBottom","marginBottom","_ref$marginLeft","marginLeft","_ref$width","width","_ref$height","xDomain","_ref$xRange","xRange","_ref$yType","yType","yDomain","_ref$yRange","yRange","_ref$xPadding","xPadding","_ref$color","X","Y","console","log","I","filter","has","xScale","padding","yScale","xAxis","tickSizeOuter","yAxis","ticks","formatValue","tickFormat","concat","O","T","svg","current","selectAll","remove","append","attr","call","g","select","clone","text","bar","join","bandwidth","node","createBarChart","react_default","a","createElement","ref","BarCharts","className","bar_chart","Versor","_ref2","Object","slicedToArray","l","p","Math","PI","sl","sin","cl","cos","sp","cp","sg","cg","_ref4","_ref3","b","c","atan2","asin","max","min","interpolate","fromAngles","t","toAngles","_ref7","_ref5","a1","b1","c1","d1","_ref8","_ref6","a2","b2","c2","d2","Array","hypot","_ref11","_ref9","_ref12","_ref10","dot","interpolateLinear","theta0","acos","theta","s","GlobeMap","props","_useState","useState","_useState2","world","setWorld","name","getWorld","_ref13","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","apply","this","canvasRef","sphere","type","draw","_ref14","_callee2","context","land","borders","countries","projection","path","render","p1","p2","r1","r2","_iterator","_step","_loop","_context3","topojson","objects","features","fitExtent","country","arc","clearRect","beginPath","fillStyle","fill","strokeStyle","lineWidth","stroke","_createForOfIteratorHelper","ip","iv","_context2","value","interpolateAngles","duration","tween","rotate","coordinates","transition","end","n","done","delegateYield","t1","e","f","finish","_x","useEffect","getContext","assign","LandingComponent","react_router_dom","to","ReactDOM","createRoot","document","getElementById","StrictMode","react_router","element","src_landing","exact","bar_charts","global_map","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.ee58edd8.chunk.js","sourcesContent":["import React from \"react\";\nimport * as d3 from \"d3\"\n\nimport alphabets from \"./alphabet.csv\"\n\nfunction createBarChart(data, {\n    x = (d, i) => i, // given d in data, returns the (ordinal) x-value\n    y = d => d, // given d in data, returns the (quantitative) y-value\n    title, // given d in data, returns the title text\n    marginTop = 20, // the top margin, in pixels\n    marginRight = 0, // the right margin, in pixels\n    marginBottom = 30, // the bottom margin, in pixels\n    marginLeft = 40, // the left margin, in pixels\n    width = 640, // the outer width of the chart, in pixels\n    height = 400, // the outer height of the chart, in pixels\n    xDomain, // an array of (ordinal) x-values\n    xRange = [marginLeft, width - marginRight], // [left, right]\n    yType = d3.scaleLinear, // y-scale type\n    yDomain, // [ymin, ymax]\n    yRange = [height - marginBottom, marginTop], // [bottom, top]\n    xPadding = 0.1, // amount of x-range to reserve to separate bars\n    yFormat, // a format specifier string for the y-axis\n    yLabel, // a label for the y-axis\n    color = \"currentColor\", // bar fill color\n    nodeRef\n} = {}) {\n    // Compute values.\n    const X = d3.map(data, x);\n    const Y = d3.map(data, y);\n\n    // Compute default domains, and unique the x-domain.\n    if (xDomain === undefined) xDomain = X;\n    if (yDomain === undefined) yDomain = [0, d3.max(Y)];\n    console.log(\"xDomain\")\n    console.log(xDomain)\n    xDomain = new d3.InternSet(xDomain);\n\n    console.log(X);\n    console.log(Y);\n    console.log(yRange);\n    console.log(yDomain);\n    // Omit any data not present in the x-domain.\n    const I = d3.range(X.length).filter(i => xDomain.has(X[i]));\n\n    // Construct scales, axes, and formats.\n    const xScale = d3.scaleBand(xDomain, xRange).padding(xPadding);\n    const yScale = yType(yDomain, yRange);\n    const xAxis = d3.axisBottom(xScale).tickSizeOuter(0);\n    const yAxis = d3.axisLeft(yScale).ticks(height / 40, yFormat);\n\n    // Compute titles.\n    if (title === undefined) {\n        const formatValue = yScale.tickFormat(100, yFormat);\n        title = i => `${X[i]}\\n${formatValue(Y[i])}`;\n    } else {\n        const O = d3.map(data, d => d);\n        const T = title;\n        title = i => T(O[i], i, data);\n    }\n\n    var svg = d3.select(nodeRef.current);\n    svg.selectAll(\"*\").remove(); // Clear svg content before adding new elements  \n\n    // svg.append(\"svg\")\n    //     .attr(\"width\", width)\n    //     .attr(\"height\", height)\n    //     .attr(\"viewBox\", [0, 0, width, height])\n    //     .attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\");\n\n    svg.append(\"g\")\n        .attr(\"transform\", `translate(${marginLeft},0)`)\n        .call(yAxis)\n        .call(g => g.select(\".domain\").remove())\n        .call(g => g.selectAll(\".tick line\").clone()\n            .attr(\"x2\", width - marginLeft - marginRight)\n            .attr(\"stroke-opacity\", 0.1))\n        .call(g => g.append(\"text\")\n            .attr(\"x\", -marginLeft)\n            .attr(\"y\", 10)\n            .attr(\"fill\", \"currentColor\")\n            .attr(\"text-anchor\", \"start\")\n            .text(yLabel));\n\n    const bar = svg.append(\"g\")\n        .attr(\"fill\", color)\n        .selectAll(\"rect\")\n        .data(I)\n        .join(\"rect\")\n        .attr(\"x\", i => xScale(X[i]))\n        .attr(\"y\", i => yScale(Y[i]))\n        .attr(\"height\", i => yScale(0) - yScale(Y[i]))\n        .attr(\"width\", xScale.bandwidth());\n\n    if (title) bar.append(\"title\")\n        .text(title);\n\n    svg.append(\"g\")\n        .attr(\"transform\", `translate(0,${height - marginBottom})`)\n        .call(xAxis);\n\n    return svg.node;\n}\n\nconst BarChart = () => {\n    const svgRef = React.useRef(null);\n    const properties = {\n        x: d => d.letter,\n        y: d => d.frequency,\n        yFormat: \"%\",\n        yLabel: \"↑ Frequency\",\n        height: 500,\n        color: \"steelblue\",\n        nodeRef: svgRef\n    }\n\n    d3.csv(alphabets).then((data) => {\n        // console.log(data)\n        createBarChart(data, properties);\n    })\n\n    return (\n            <svg ref={svgRef} width=\"800\" height=\"600\"/>\n    );\n\n    // return <div>\n    //     {this.state.node}\n    // </div>\n}\n\nexport default BarChart;\n","import React from 'react';\nimport BarChart from './bar-chart';\n\nfunction BarCharts() {\n  return (\n    <div className=\"App\">\n      <BarChart />\n      <BarChart />\n      <BarChart />\n      <BarChart />\n      <BarChart />\n      <BarChart />\n    </div>\n  );\n}\n\nexport default BarCharts;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport * as topojson from \"topojson-client\";\nimport * as d3 from \"d3\"\n\n//https://observablehq.com/@d3/world-tour\nclass Versor {\n    static fromAngles([l, p, g]) {\n        l *= Math.PI / 360;\n        p *= Math.PI / 360;\n        g *= Math.PI / 360;\n        const sl = Math.sin(l), cl = Math.cos(l);\n        const sp = Math.sin(p), cp = Math.cos(p);\n        const sg = Math.sin(g), cg = Math.cos(g);\n        return [\n            cl * cp * cg + sl * sp * sg,\n            sl * cp * cg - cl * sp * sg,\n            cl * sp * cg + sl * cp * sg,\n            cl * cp * sg - sl * sp * cg\n        ];\n    }\n    static toAngles([a, b, c, d]) {\n        return [\n            Math.atan2(2 * (a * b + c * d), 1 - 2 * (b * b + c * c)) * 180 / Math.PI,\n            Math.asin(Math.max(-1, Math.min(1, 2 * (a * c - d * b)))) * 180 / Math.PI,\n            Math.atan2(2 * (a * d + b * c), 1 - 2 * (c * c + d * d)) * 180 / Math.PI\n        ];\n    }\n    static interpolateAngles(a, b) {\n        const i = Versor.interpolate(Versor.fromAngles(a), Versor.fromAngles(b));\n        return t => Versor.toAngles(i(t));\n    }\n    static interpolateLinear([a1, b1, c1, d1], [a2, b2, c2, d2]) {\n        a2 -= a1;\n        b2 -= b1;\n        c2 -= c1;\n        d2 -= d1;\n        const x = new Array(4);\n        return t => {\n            const l = Math.hypot(x[0] = a1 + a2 * t, x[1] = b1 + b2 * t, x[2] = c1 + c2 * t, x[3] = d1 + d2 * t);\n            x[0] /= l;\n            x[1] /= l;\n            x[2] /= l;\n            x[3] /= l;\n            return x;\n        };\n    }\n    static interpolate([a1, b1, c1, d1], [a2, b2, c2, d2]) {\n        let dot = a1 * a2 + b1 * b2 + c1 * c2 + d1 * d2;\n        if (dot < 0) {\n            a2 = -a2;\n            b2 = -b2;\n            c2 = -c2;\n            d2 = -d2;\n            dot = -dot;\n        }\n\n        if (dot > 0.9995) return Versor.interpolateLinear([a1, b1, c1, d1], [a2, b2, c2, d2]);\n        const theta0 = Math.acos(Math.max(-1, Math.min(1, dot)));\n        const x = new Array(4);\n        const l = Math.hypot(a2 -= a1 * dot, b2 -= b1 * dot, c2 -= c1 * dot, d2 -= d1 * dot);\n        a2 /= l;\n        b2 /= l;\n        c2 /= l;\n        d2 /= l;\n        return t => {\n            const theta = theta0 * t;\n            const s = Math.sin(theta);\n            const c = Math.cos(theta);\n            x[0] = a1 * c + a2 * s;\n            x[1] = b1 * c + b2 * s;\n            x[2] = c1 * c + c2 * s;\n            x[3] = d1 * c + d2 * s;\n            return x;\n        };\n    }\n}\n\nconst GlobeMap = props => {\n    const [world, setWorld] = useState('');\n    let name = '';\n    const getWorld = async () => {\n        await d3.json(\"https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json\")\n            .then(world => {\n                setWorld(world);\n            })\n    }\n    const canvasRef = useRef(null)\n    const width = 900;\n\n    const sphere = ({ type: \"Sphere\" })\n    const tilt = 20\n    const height = Math.min(width, 720)\n\n    const draw = async (context) => {\n        const land = topojson.feature(world, world.objects.land)\n        const borders = topojson.mesh(world, world.objects.countries, (a, b) => a !== b)\n        const countries = topojson.feature(world, world.objects.countries).features\n\n        const projection = d3.geoOrthographic().fitExtent([[10, 10], [width - 10, height - 10]], sphere);\n        const path = d3.geoPath(projection, context);\n\n        const render = (country, arc) => {\n            context.clearRect(0, 0, width, height);\n\n            context.beginPath();\n            path(land);\n            context.fillStyle = \"#ccc\";\n            context.fill();\n            context.beginPath();\n            context.beginPath();\n\n            path(country);\n            context.fillStyle = \"#f00\";\n            context.fill();\n            context.beginPath();\n\n            path(borders);\n            context.strokeStyle = \"#fff\";\n            context.lineWidth = 0.5;\n            context.stroke();\n\n            path(sphere);\n            context.strokeStyle = \"#000\";\n            context.lineWidth = 1.5;\n            context.stroke();\n\n            context.beginPath();\n            path(arc);\n            context.stroke();\n        }\n\n        let p1, p2 = [0, 0], r1, r2 = [0, 0, 0];\n        for (const country of countries) {\n            name = country.properties.name;\n            render(country);\n\n            p1 = p2;\n            p2 = d3.geoCentroid(country);\n            r1 = r2;\n            r2 = [-p2[0], tilt - p2[1], 0];\n            const ip = d3.geoInterpolate(p1, p2);\n            const iv = Versor.interpolateAngles(r1, r2);\n\n            await d3.transition()\n                .duration(1250)\n                .tween(\"render\", () => t => {\n                    projection.rotate(iv(t));\n                    render(country, { type: \"LineString\", coordinates: [p1, ip(t)] });\n                })\n                .transition()\n                .tween(\"render\", () => t => {\n                    render(country, { type: \"LineString\", coordinates: [ip(t), p2] });\n                })\n                .end();\n        }\n    }\n\n    useEffect(() => {\n        if (!world) {\n            getWorld();\n            return;\n        }\n\n        const canvas = canvasRef.current\n        const context = canvas.getContext('2d')\n\n        //Our draw come here\n        draw(context)\n    }, [draw])\n\n    return <div>\n        <div>{name}</div>\n        <canvas ref={canvasRef} {...props} width={width} height={height} />\n    </div>\n}\n\nexport default GlobeMap;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./landing.css\"\n\nconst LandingComponent = () => {\n\n    return <nav className='landing'>\n        <Link className=\"btn btn-primary\" to=\"/bars\">Dashbord</Link>\n        <Link className=\"btn btn-primary\" to=\"/globe\">See Global Stat</Link>\n    </nav>\n}\n\nexport default LandingComponent;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport './index.css';\nimport BarCharts from './bar-charts';\nimport GlobeMap from './global-map';\nimport LandingComponent from \"./landing\"\nimport 'bootstrap-css-only/css/bootstrap.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    <Router>\n      <Routes className=\"root-router\">\n        <Route path='/' element={<LandingComponent />} />\n        <Route exact path='/bars' element={<BarCharts />} />\n        <Route exact path='/globe' element={<GlobeMap />} />\n      </Routes>\n    </Router>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/alphabet.2476c334.csv\";"],"sourceRoot":""}